---
layout: post
title:  "Prolog. Заметки по обучению"
date:   2017-11-13 22:58:48 +0300
categories: prolog learning 
---
### Изучение Пролога

Очень сложно представить себе, как изучать язык программирования, особенно если он заставляет думать совершенно по-новому.

Существует довольно большое количество литературы по Прологу. 
Её особенность состоит в том, что её много, и она написана в разное время.
Сложно понять, с какой книги стоит начать обучение?

Может наступить разочарование, когда пользователь попытается выполнить какой-либо пример из книги или интернета в имеющемся варианте Пролога, а программа работать не сможет. 

При этом пользователь совсем не виноват. Проблема может быть в том, что текущий диалект Пролога не поддерживает вариант, описанный в книге, статье или скачанном примере.

Что можно в этом случае порекомендовать?

Первое, необходимо определиться с тем, какой вариант\диалект Пролога вы будете изучать.

Далее, необходимо найти по имеющемуся варианту компилятора документацию и хотя бы бегло её пробежать. Рекомендуется постоянно к ней обращаться в случае каких-либо проблем, связанных с запуском программ из книжек или интернета. Также я бы посоветовал использовать интегрированную среду разработки. Вам следует с ней хорошо ознакомиться, так как вы будете проводить в ней большое количество времени. 

Настоятельно рекомендуется ознакомиться с отладчиком, входящем в ваш вариант Пролога. Без этого разработка программ будет малоэффективной затеей.

Разобравшись с практикой, перейдём к списку литературы. Существует довольно большое число источников. Все они разные по уровню сложности, и не очень понятно, что лучше выбрать.

Я предлагаю следующий путь освоения Пролога:

1) Клоксин, Меллиш. Программирование на языке Пролог. 
Не смотря на то, что книга старая, она содержит введение в идеи, заложенные в Прологе. Рекомендуется регулярно консультироваться с рукокодством пользователя по вашему компилятору, чтобы обнаружить возможные различия.

2) Стерлинг, Шапиро. Искуство программирования на языке Пролог. 

Это далеко не полный список литературы. И я намеренно не включил другие книги. Почему? Потому что в сумме эти две книги тянут на 600 страниц. Вместе с руководством пользователя по компилятору число страниц возрастает до 1000. Ответ очевиден. Время дорого, а затраты должны себя отбивать. 

Самое главное - это не забывать про практику. Необходимо проверять то, что написано в книге и решать задачи.

Может показаться, что Пролог -- это никому не нужное старьё, на которое нет спроса. Но это не совсем так. 

После работы с императивными языками, Пролог воспринимается как глоток свежего воздуха.

Во-первых, Пролог может интегрироваться с императивными языками программирования. Это значит, что вы в любом случае не потеряете свои инвестиции в Пролог и логическое программирование.

Во-вторых, он подходит для задач бизнеса, например, для работы с бизнес-правилами. Особенность бизнес-правил в том, что они могут меняться по нескольку раз на дню. Поэтому разработчику очень важно не изобретать каждый раз свой велосипед для решения этой задачи, а использовать для этого подходящий инструмент. 

В-третьих, вы научитесь по-новому думать и просто сможете получать удовольствие от новых знаний.